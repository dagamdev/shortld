---
import Layout from '@/layouts/index.astro'
import { Prisma } from '@/lib/prisma'

const { code } = Astro.params
const isLoged = Astro.locals.session !== null
let link: {
  id: string
  url: string
} | null = null

try {
  link = await Prisma.link.findUnique({
    where: {
      code
    },
    select: {
      id: true,
      url: true
    }
  })
  
  if (link !== null) {
    await Prisma.click.create({
      data: {
        linkId: link.id
      }
    })
  }
} catch (error) {
  console.error(error)
}
---

<Layout title={`${code} | ShortLD`} description=`Código de enlace acortado ${code}. ${link?.url ? 'Enlace acortado: ' + link.url : 'El código de enlace no hace referencia a ningún enlace.'}\n Acorta enlaces sin límite de cantidad ni de longitud, y de forma gratuita.` >
  <main class="flex items-center min-h-screen" data-url={link?.url} data-session={(Astro.locals.session !== null) + ''}>
    <section class="max-w-lg mx-auto text-lg text-center space-y-4 font-semibold">
      {isLoged === false && <>
          <p class="text-balance"><span class="text-blue-500">Es feo y poco práctico usar enlaces largos.</span> ¿Por qué no acortarlos?</p>
          <p class="text-yellow-500">Acorta cualquier enlace gratis.</p>
          <a href="/" target="_blank" class="inline-block py-2 px-4 rounded-lg text-gray-100 bg-emerald-500 hover:bg-emerald-600">!Acortar enlace¡</a>
        </>
      }
      <em class="block text-gray-900/70 dark:text-gray-200/60">Redirigiendo...</em>
    </section>
  </main>
</Layout>

<script>
  const main = document.querySelector('main')
  if (main !== null) {
    const session: boolean = JSON.parse(main.dataset.session ?? 'false')
    const url = main.dataset.url

    if (url !== undefined) {
      if (session) {
        location.assign(url)
      } else {
        setTimeout(() => {
          location.assign(url)
        }, 4_000)
      }
    }
  }
</script>
